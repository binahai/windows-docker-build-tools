# escape=`

ARG DOTNET_SDK_VERSION="4.8"
ARG VISUAL_STUDIO_BUILDTOOLS_VERSION="16.11.2.0"
ARG VISUAL_STUDIO_VCTOOLS_VERSION="1.0.1"
ARG CMAKE_VERSION="3.20.0"
ARG PYTHON_VERSION="3.8.6"

# Use the latest Windows Server Core image with .NET Framework 4.8.
FROM mcr.microsoft.com/dotnet/framework/sdk:${DOTNET_SDK_VERSION}-20220215-windowsservercore-ltsc2019

ENV BUILDING_INSIDE_DOCKER true

# Restore the default Windows shell for correct batch processing.
SHELL ["cmd", "/S", "/C"]

RUN nuget config

WORKDIR c:/

# Install chocolatey
RUN @"%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command "[System.Net.ServicePointManager]::SecurityProtocol = 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))" `
    && SET "PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin"

# Install build tools with chocolatey
# `--install-args` is based on https://docs.microsoft.com/en-us/visualstudio/install/build-tools-container?view=vs-2019
ARG VISUAL_STUDIO_BUILDTOOLS_VERSION
ENV VISUAL_STUDIO_BUILDTOOLS_VERSION=${VISUAL_STUDIO_BUILDTOOLS_VERSION}
RUN `
    choco install -y --no-progress --limitoutput --version="%VISUAL_STUDIO_BUILDTOOLS_VERSION%" visualstudio2019buildtools `
    --install-args "--quiet --wait --norestart --nocache modify --installPath C:\BuildTools --add Microsoft.VisualStudio.Component.Windows10SDK.18362 --add Microsoft.VisualStudio.Workload.VCTools --remove Microsoft.VisualStudio.Component.Windows10SDK.10240 --remove Microsoft.VisualStudio.Component.Windows10SDK.10586 --remove Microsoft.VisualStudio.Component.Windows10SDK.14393 --remove Microsoft.VisualStudio.Component.Windows81SDK"

# Install Visual Studio VC Tools with chocolatey
ARG VISUAL_STUDIO_VCTOOLS_VERSION
ENV VISUAL_STUDIO_VCTOOLS_VERSION=${VISUAL_STUDIO_VCTOOLS_VERSION}
RUN choco install -y --no-progress --limitoutput --version="%VISUAL_STUDIO_VCTOOLS_VERSION%" visualstudio2019-workload-vctools --install-args "--quiet --wait --norestart --nocache modify --installPath C:\BuildTools"

# Install LLVM
RUN choco install -y --no-progress --limitoutput llvm

# Install Development Tools
RUN choco install -y --no-progress --limitoutput git vim unzip awscli docker-cli
RUN mklink "%ALLUSERSPROFILE%\chocolatey\bin\bash.exe" "C:\Program Files\Git\bin\bash.exe"

# Install CMake
ARG CMAKE_VERSION
ENV CMAKE_VERSION=${CMAKE_VERSION}
RUN choco install -y --no-progress --limitoutput cmake --version="%CMAKE_VERSION%" --install-args 'ADD_CMAKE_TO_PATH=System'

# Install Python
ARG PYTHON_VERSION
ENV PYTHON_VERSION=${PYTHON_VERSION}
RUN choco install -y --no-progress --limitoutput python3 --version="%PYTHON_VERSION%" --params "/quiet /PrependPath=1 /InstallAllUsers=1"

# Enable Developer Mode
RUN reg add "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\AppModelUnlock" /t REG_DWORD /f /v "AllowDevelopmentWithoutDevLicense" /d "1"

LABEL `
    binahai.keep="true" `
    windows.buildtools="true" `
    windows.buildtools.python_version="${PYTHON_VERSION}" `
    windows.buildtools.cmake_version="${CMAKE_VERSION}" `
    windows.buildtools.visualstudio2019buildtools_version="${VISUAL_STUDIO_BUILDTOOLS_VERSION}" `
    windows.buildtools.visualstudio2019vctools_version="${VISUAL_STUDIO_VCTOOLS_VERSION}"
